org.springframework.security.web.access.ExceptionTranslationFilter -> DEBUG org.springframework.security.web.access.ExceptionTranslationFilter - Access is denied (user is anonymous); redirecting to authentication entry point
org.springframework.security.access.AccessDeniedException: Access is denied
	at org.springframework.security.access.vote.AffirmativeBased.decide(AffirmativeBased.java:84)
	at org.springframework.security.access.intercept.AbstractSecurityInterceptor.beforeInvocation(AbstractSecurityInterceptor.java:233)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:124)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:169)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at javax.servlet.FilterChain$doFilter.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:120)
	at com.subha.security.filter.AuthenticationTokenFilter.doFilter(AuthenticationTokenFilter.groovy:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:121)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:214)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:522)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:1110)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:785)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1425)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
org.springframework.security.web.access.ExceptionTranslationFilter -> DEBUG org.springframework.security.web.access.ExceptionTranslationFilter - Calling Authentication entry point.
org.apache.commons.logging.Log$info -> INFO com.subha.security.utils.EntryPointUnauthorizedHandler -  ********* In Auth EntryPoint with Exception org.springframework.security.authentication.InsufficientAuthenticationException: Full authentication is required to access this resource
org.springframework.security.web.header.writers.HstsHeaderWriter -> DEBUG org.springframework.security.web.header.writers.HstsHeaderWriter - Not injecting HSTS header since it did not match the requestMatcher org.springframework.security.web.header.writers.HstsHeaderWriter$SecureRequestMatcher@1771284
org.springframework.security.web.context.SecurityContextPersistenceFilter -> DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter - SecurityContextHolder now cleared, as request processing completed
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /auth at position 1 of 11 in additional filter chain; firing Filter: 'WebAsyncManagerIntegrationFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /auth at position 2 of 11 in additional filter chain; firing Filter: 'SecurityContextPersistenceFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /auth at position 3 of 11 in additional filter chain; firing Filter: 'HeaderWriterFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /auth at position 4 of 11 in additional filter chain; firing Filter: 'LogoutFilter'
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', GET]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /auth' doesn't match 'GET /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', POST]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Checking match of request : '/auth'; against '/logout'
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', PUT]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /auth' doesn't match 'PUT /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', DELETE]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /auth' doesn't match 'DELETE /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - No matches found
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /auth at position 5 of 11 in additional filter chain; firing Filter: 'AuthenticationTokenFilter'
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - AuthenticationTokenFiler Called......
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - ****** Authentication:  null 
 ****** UserName: null
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /auth at position 6 of 11 in additional filter chain; firing Filter: 'RequestCacheAwareFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /auth at position 7 of 11 in additional filter chain; firing Filter: 'SecurityContextHolderAwareRequestFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /auth at position 8 of 11 in additional filter chain; firing Filter: 'AnonymousAuthenticationFilter'
org.springframework.security.web.authentication.AnonymousAuthenticationFilter -> DEBUG org.springframework.security.web.authentication.AnonymousAuthenticationFilter - Populated SecurityContextHolder with anonymous token: 'org.springframework.security.authentication.AnonymousAuthenticationToken@9055c2bc: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_ANONYMOUS'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /auth at position 9 of 11 in additional filter chain; firing Filter: 'SessionManagementFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /auth at position 10 of 11 in additional filter chain; firing Filter: 'ExceptionTranslationFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /auth at position 11 of 11 in additional filter chain; firing Filter: 'FilterSecurityInterceptor'
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /auth' doesn't match 'OPTIONS /**
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Checking match of request : '/auth'; against '/auth/**'
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Secure object: FilterInvocation: URL: /auth; Attributes: [permitAll]
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Previously Authenticated: org.springframework.security.authentication.AnonymousAuthenticationToken@9055c2bc: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_ANONYMOUS
org.springframework.security.access.vote.AffirmativeBased -> DEBUG org.springframework.security.access.vote.AffirmativeBased - Voter: org.springframework.security.web.access.expression.WebExpressionVoter@95b836, returned: 1
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Authorization successful
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - RunAsManager did not change Authentication object
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /auth reached end of additional filter chain; proceeding with original chain
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - AuthenticationTokenFiler Called......
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - ****** Authentication:  org.springframework.security.authentication.AnonymousAuthenticationToken@9055c2bc: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_ANONYMOUS 
 ****** UserName: null
org.apache.commons.logging.Log$info -> INFO com.subha.security.controller.AuthenticationController - ************  Controller Method Call Starts
org.apache.commons.logging.Log$info -> INFO com.subha.security.controller.AuthenticationController - ************  In AuthenticateRequest  com.subha.security.model.AuthenticationRequest@6d96d5
org.apache.commons.logging.Log$info -> INFO com.subha.security.controller.AuthenticationController - ************  The Authentication Manager class org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator
org.springframework.security.authentication.ProviderManager -> DEBUG org.springframework.security.authentication.ProviderManager - Authentication attempt using com.subha.security.provider.CustomAuthenticationProvider
org.apache.commons.logging.Log$info -> INFO com.subha.security.controller.AuthenticationController - ************  The Authentication class is: class org.springframework.security.authentication.UsernamePasswordAuthenticationToken
org.apache.commons.logging.Log$info -> INFO com.subha.security.controller.AuthenticationController - ************  The User Details Service is:class com.subha.security.service.UserDetailsServiceImpl
org.apache.commons.logging.Log$info -> INFO com.subha.security.controller.AuthenticationController - ************  Controller Method Call Ends
org.springframework.security.web.header.writers.HstsHeaderWriter -> DEBUG org.springframework.security.web.header.writers.HstsHeaderWriter - Not injecting HSTS header since it did not match the requestMatcher org.springframework.security.web.header.writers.HstsHeaderWriter$SecureRequestMatcher@1771284
org.springframework.security.web.access.ExceptionTranslationFilter -> DEBUG org.springframework.security.web.access.ExceptionTranslationFilter - Chain processed normally
org.springframework.security.web.context.SecurityContextPersistenceFilter -> DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter - SecurityContextHolder now cleared, as request processing completed
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/deleteIndex?indexName=bookindex at position 1 of 11 in additional filter chain; firing Filter: 'WebAsyncManagerIntegrationFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/deleteIndex?indexName=bookindex at position 2 of 11 in additional filter chain; firing Filter: 'SecurityContextPersistenceFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/deleteIndex?indexName=bookindex at position 3 of 11 in additional filter chain; firing Filter: 'HeaderWriterFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/deleteIndex?indexName=bookindex at position 4 of 11 in additional filter chain; firing Filter: 'LogoutFilter'
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', GET]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/deleteIndex' doesn't match 'GET /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', POST]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Checking match of request : '/elasticbook/deleteIndex'; against '/logout'
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', PUT]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/deleteIndex' doesn't match 'PUT /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', DELETE]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/deleteIndex' doesn't match 'DELETE /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - No matches found
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/deleteIndex?indexName=bookindex at position 5 of 11 in additional filter chain; firing Filter: 'AuthenticationTokenFilter'
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - AuthenticationTokenFiler Called......
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - ****** Authentication:  null 
 ****** UserName: MIC
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter -   ****** In Custom Filter Hurrah!!! Token Present
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter -   ****** In Custom Filter Hurrah!!! Valid Token Present
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/deleteIndex?indexName=bookindex at position 6 of 11 in additional filter chain; firing Filter: 'RequestCacheAwareFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/deleteIndex?indexName=bookindex at position 7 of 11 in additional filter chain; firing Filter: 'SecurityContextHolderAwareRequestFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/deleteIndex?indexName=bookindex at position 8 of 11 in additional filter chain; firing Filter: 'AnonymousAuthenticationFilter'
org.springframework.security.web.authentication.AnonymousAuthenticationFilter -> DEBUG org.springframework.security.web.authentication.AnonymousAuthenticationFilter - SecurityContextHolder not populated with anonymous token, as it already contained: 'org.springframework.security.authentication.UsernamePasswordAuthenticationToken@6eaf821d: Principal: com.subha.security.model.User@13af005; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_A'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/deleteIndex?indexName=bookindex at position 9 of 11 in additional filter chain; firing Filter: 'SessionManagementFilter'
org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy -> DEBUG org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy - Delegating to org.springframework.security.web.authentication.session.ChangeSessionIdAuthenticationStrategy@17008fb
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/deleteIndex?indexName=bookindex at position 10 of 11 in additional filter chain; firing Filter: 'ExceptionTranslationFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/deleteIndex?indexName=bookindex at position 11 of 11 in additional filter chain; firing Filter: 'FilterSecurityInterceptor'
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/deleteIndex' doesn't match 'OPTIONS /**
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Checking match of request : '/elasticbook/deleteIndex'; against '/auth/**'
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Secure object: FilterInvocation: URL: /elasticbook/deleteIndex?indexName=bookindex; Attributes: [authenticated]
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Previously Authenticated: org.springframework.security.authentication.UsernamePasswordAuthenticationToken@6eaf821d: Principal: com.subha.security.model.User@13af005; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_A
org.springframework.security.access.vote.AffirmativeBased -> DEBUG org.springframework.security.access.vote.AffirmativeBased - Voter: org.springframework.security.web.access.expression.WebExpressionVoter@95b836, returned: 1
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Authorization successful
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - RunAsManager did not change Authentication object
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/deleteIndex?indexName=bookindex reached end of additional filter chain; proceeding with original chain
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - AuthenticationTokenFiler Called......
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - ****** Authentication:  org.springframework.security.authentication.UsernamePasswordAuthenticationToken@6eaf821d: Principal: com.subha.security.model.User@13af005; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_A 
 ****** UserName: MIC
org.apache.commons.logging.Log$info -> INFO com.subha.security.controller.BookController - ******  Deleting Book  Index: bookindex in ELASTIC DB......
org.springframework.security.web.header.writers.HstsHeaderWriter -> DEBUG org.springframework.security.web.header.writers.HstsHeaderWriter - Not injecting HSTS header since it did not match the requestMatcher org.springframework.security.web.header.writers.HstsHeaderWriter$SecureRequestMatcher@1771284
org.springframework.security.web.access.ExceptionTranslationFilter -> DEBUG org.springframework.security.web.access.ExceptionTranslationFilter - Chain processed normally
org.springframework.security.web.context.SecurityContextPersistenceFilter -> DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter - SecurityContextHolder now cleared, as request processing completed
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addIndex?indexName=book at position 1 of 11 in additional filter chain; firing Filter: 'WebAsyncManagerIntegrationFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addIndex?indexName=book at position 2 of 11 in additional filter chain; firing Filter: 'SecurityContextPersistenceFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addIndex?indexName=book at position 3 of 11 in additional filter chain; firing Filter: 'HeaderWriterFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addIndex?indexName=book at position 4 of 11 in additional filter chain; firing Filter: 'LogoutFilter'
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', GET]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/addIndex' doesn't match 'GET /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', POST]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Checking match of request : '/elasticbook/addIndex'; against '/logout'
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', PUT]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/addIndex' doesn't match 'PUT /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', DELETE]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/addIndex' doesn't match 'DELETE /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - No matches found
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addIndex?indexName=book at position 5 of 11 in additional filter chain; firing Filter: 'AuthenticationTokenFilter'
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - AuthenticationTokenFiler Called......
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - ****** Authentication:  null 
 ****** UserName: MIC
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter -   ****** In Custom Filter Hurrah!!! Token Present
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter -   ****** In Custom Filter Hurrah!!! Valid Token Present
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addIndex?indexName=book at position 6 of 11 in additional filter chain; firing Filter: 'RequestCacheAwareFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addIndex?indexName=book at position 7 of 11 in additional filter chain; firing Filter: 'SecurityContextHolderAwareRequestFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addIndex?indexName=book at position 8 of 11 in additional filter chain; firing Filter: 'AnonymousAuthenticationFilter'
org.springframework.security.web.authentication.AnonymousAuthenticationFilter -> DEBUG org.springframework.security.web.authentication.AnonymousAuthenticationFilter - SecurityContextHolder not populated with anonymous token, as it already contained: 'org.springframework.security.authentication.UsernamePasswordAuthenticationToken@6f44a65f: Principal: com.subha.security.model.User@d1d447; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_A'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addIndex?indexName=book at position 9 of 11 in additional filter chain; firing Filter: 'SessionManagementFilter'
org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy -> DEBUG org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy - Delegating to org.springframework.security.web.authentication.session.ChangeSessionIdAuthenticationStrategy@17008fb
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addIndex?indexName=book at position 10 of 11 in additional filter chain; firing Filter: 'ExceptionTranslationFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addIndex?indexName=book at position 11 of 11 in additional filter chain; firing Filter: 'FilterSecurityInterceptor'
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/addIndex' doesn't match 'OPTIONS /**
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Checking match of request : '/elasticbook/addIndex'; against '/auth/**'
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Secure object: FilterInvocation: URL: /elasticbook/addIndex?indexName=book; Attributes: [authenticated]
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Previously Authenticated: org.springframework.security.authentication.UsernamePasswordAuthenticationToken@6f44a65f: Principal: com.subha.security.model.User@d1d447; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_A
org.springframework.security.access.vote.AffirmativeBased -> DEBUG org.springframework.security.access.vote.AffirmativeBased - Voter: org.springframework.security.web.access.expression.WebExpressionVoter@95b836, returned: 1
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Authorization successful
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - RunAsManager did not change Authentication object
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addIndex?indexName=book reached end of additional filter chain; proceeding with original chain
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - AuthenticationTokenFiler Called......
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - ****** Authentication:  org.springframework.security.authentication.UsernamePasswordAuthenticationToken@6f44a65f: Principal: com.subha.security.model.User@d1d447; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_A 
 ****** UserName: MIC
org.apache.commons.logging.Log$info -> INFO com.subha.security.controller.BookController - ******  Adding Book  Index: book in ELASTIC DB......
org.springframework.security.web.header.writers.HstsHeaderWriter -> DEBUG org.springframework.security.web.header.writers.HstsHeaderWriter - Not injecting HSTS header since it did not match the requestMatcher org.springframework.security.web.header.writers.HstsHeaderWriter$SecureRequestMatcher@1771284
org.springframework.security.web.access.ExceptionTranslationFilter -> DEBUG org.springframework.security.web.access.ExceptionTranslationFilter - Chain processed normally
org.springframework.security.web.context.SecurityContextPersistenceFilter -> DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter - SecurityContextHolder now cleared, as request processing completed
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addMapping at position 1 of 11 in additional filter chain; firing Filter: 'WebAsyncManagerIntegrationFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addMapping at position 2 of 11 in additional filter chain; firing Filter: 'SecurityContextPersistenceFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addMapping at position 3 of 11 in additional filter chain; firing Filter: 'HeaderWriterFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addMapping at position 4 of 11 in additional filter chain; firing Filter: 'LogoutFilter'
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', GET]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/addMapping' doesn't match 'GET /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', POST]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Checking match of request : '/elasticbook/addMapping'; against '/logout'
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', PUT]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/addMapping' doesn't match 'PUT /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', DELETE]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/addMapping' doesn't match 'DELETE /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - No matches found
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addMapping at position 5 of 11 in additional filter chain; firing Filter: 'AuthenticationTokenFilter'
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - AuthenticationTokenFiler Called......
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - ****** Authentication:  null 
 ****** UserName: null
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addMapping at position 6 of 11 in additional filter chain; firing Filter: 'RequestCacheAwareFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addMapping at position 7 of 11 in additional filter chain; firing Filter: 'SecurityContextHolderAwareRequestFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addMapping at position 8 of 11 in additional filter chain; firing Filter: 'AnonymousAuthenticationFilter'
org.springframework.security.web.authentication.AnonymousAuthenticationFilter -> DEBUG org.springframework.security.web.authentication.AnonymousAuthenticationFilter - Populated SecurityContextHolder with anonymous token: 'org.springframework.security.authentication.AnonymousAuthenticationToken@9055c2bc: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_ANONYMOUS'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addMapping at position 9 of 11 in additional filter chain; firing Filter: 'SessionManagementFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addMapping at position 10 of 11 in additional filter chain; firing Filter: 'ExceptionTranslationFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addMapping at position 11 of 11 in additional filter chain; firing Filter: 'FilterSecurityInterceptor'
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/addMapping' doesn't match 'OPTIONS /**
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Checking match of request : '/elasticbook/addMapping'; against '/auth/**'
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Secure object: FilterInvocation: URL: /elasticbook/addMapping; Attributes: [authenticated]
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Previously Authenticated: org.springframework.security.authentication.AnonymousAuthenticationToken@9055c2bc: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_ANONYMOUS
org.springframework.security.access.vote.AffirmativeBased -> DEBUG org.springframework.security.access.vote.AffirmativeBased - Voter: org.springframework.security.web.access.expression.WebExpressionVoter@95b836, returned: -1
org.springframework.security.web.access.ExceptionTranslationFilter -> DEBUG org.springframework.security.web.access.ExceptionTranslationFilter - Access is denied (user is anonymous); redirecting to authentication entry point
org.springframework.security.access.AccessDeniedException: Access is denied
	at org.springframework.security.access.vote.AffirmativeBased.decide(AffirmativeBased.java:84)
	at org.springframework.security.access.intercept.AbstractSecurityInterceptor.beforeInvocation(AbstractSecurityInterceptor.java:233)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:124)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:169)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at javax.servlet.FilterChain$doFilter.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at javax.servlet.FilterChain$doFilter.call(Unknown Source)
	at com.subha.security.filter.AuthenticationTokenFilter.doFilter(AuthenticationTokenFilter.groovy:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:121)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:214)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:522)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:1110)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:785)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1425)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
org.springframework.security.web.access.ExceptionTranslationFilter -> DEBUG org.springframework.security.web.access.ExceptionTranslationFilter - Calling Authentication entry point.
org.apache.commons.logging.Log$info -> INFO com.subha.security.utils.EntryPointUnauthorizedHandler -  ********* In Auth EntryPoint with Exception org.springframework.security.authentication.InsufficientAuthenticationException: Full authentication is required to access this resource
org.springframework.security.web.header.writers.HstsHeaderWriter -> DEBUG org.springframework.security.web.header.writers.HstsHeaderWriter - Not injecting HSTS header since it did not match the requestMatcher org.springframework.security.web.header.writers.HstsHeaderWriter$SecureRequestMatcher@1771284
org.springframework.security.web.context.SecurityContextPersistenceFilter -> DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter - SecurityContextHolder now cleared, as request processing completed
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addMapping at position 1 of 11 in additional filter chain; firing Filter: 'WebAsyncManagerIntegrationFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addMapping at position 2 of 11 in additional filter chain; firing Filter: 'SecurityContextPersistenceFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addMapping at position 3 of 11 in additional filter chain; firing Filter: 'HeaderWriterFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addMapping at position 4 of 11 in additional filter chain; firing Filter: 'LogoutFilter'
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', GET]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/addMapping' doesn't match 'GET /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', POST]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Checking match of request : '/elasticbook/addMapping'; against '/logout'
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', PUT]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/addMapping' doesn't match 'PUT /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', DELETE]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/addMapping' doesn't match 'DELETE /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - No matches found
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addMapping at position 5 of 11 in additional filter chain; firing Filter: 'AuthenticationTokenFilter'
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - AuthenticationTokenFiler Called......
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - ****** Authentication:  null 
 ****** UserName: MIC
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter -   ****** In Custom Filter Hurrah!!! Token Present
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter -   ****** In Custom Filter Hurrah!!! Valid Token Present
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addMapping at position 6 of 11 in additional filter chain; firing Filter: 'RequestCacheAwareFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addMapping at position 7 of 11 in additional filter chain; firing Filter: 'SecurityContextHolderAwareRequestFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addMapping at position 8 of 11 in additional filter chain; firing Filter: 'AnonymousAuthenticationFilter'
org.springframework.security.web.authentication.AnonymousAuthenticationFilter -> DEBUG org.springframework.security.web.authentication.AnonymousAuthenticationFilter - SecurityContextHolder not populated with anonymous token, as it already contained: 'org.springframework.security.authentication.UsernamePasswordAuthenticationToken@6f703411: Principal: com.subha.security.model.User@e54609; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_A'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addMapping at position 9 of 11 in additional filter chain; firing Filter: 'SessionManagementFilter'
org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy -> DEBUG org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy - Delegating to org.springframework.security.web.authentication.session.ChangeSessionIdAuthenticationStrategy@17008fb
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addMapping at position 10 of 11 in additional filter chain; firing Filter: 'ExceptionTranslationFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addMapping at position 11 of 11 in additional filter chain; firing Filter: 'FilterSecurityInterceptor'
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/addMapping' doesn't match 'OPTIONS /**
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Checking match of request : '/elasticbook/addMapping'; against '/auth/**'
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Secure object: FilterInvocation: URL: /elasticbook/addMapping; Attributes: [authenticated]
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Previously Authenticated: org.springframework.security.authentication.UsernamePasswordAuthenticationToken@6f703411: Principal: com.subha.security.model.User@e54609; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_A
org.springframework.security.access.vote.AffirmativeBased -> DEBUG org.springframework.security.access.vote.AffirmativeBased - Voter: org.springframework.security.web.access.expression.WebExpressionVoter@95b836, returned: 1
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Authorization successful
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - RunAsManager did not change Authentication object
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addMapping reached end of additional filter chain; proceeding with original chain
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - AuthenticationTokenFiler Called......
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - ****** Authentication:  org.springframework.security.authentication.UsernamePasswordAuthenticationToken@6f703411: Principal: com.subha.security.model.User@e54609; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_A 
 ****** UserName: MIC
org.apache.commons.logging.Log$info -> INFO com.subha.security.controller.BookController - ******  Adding Book Mapping in ELASTIC DB......
org.apache.commons.logging.Log$error$0 -> ERROR com.subha.security.controller.BookController - Generic **********  Request: http://localhost:8080/SpringToken/elasticbook/addMapping raised org.springframework.data.elasticsearch.ElasticsearchException: Error while getting mapping for indexName : bookindex type : book no such index
org.springframework.security.web.header.writers.HstsHeaderWriter -> DEBUG org.springframework.security.web.header.writers.HstsHeaderWriter - Not injecting HSTS header since it did not match the requestMatcher org.springframework.security.web.header.writers.HstsHeaderWriter$SecureRequestMatcher@1771284
org.springframework.security.web.context.SecurityContextPersistenceFilter -> DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter - SecurityContextHolder now cleared, as request processing completed
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/deleteIndex?indexName=book at position 1 of 11 in additional filter chain; firing Filter: 'WebAsyncManagerIntegrationFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/deleteIndex?indexName=book at position 2 of 11 in additional filter chain; firing Filter: 'SecurityContextPersistenceFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/deleteIndex?indexName=book at position 3 of 11 in additional filter chain; firing Filter: 'HeaderWriterFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/deleteIndex?indexName=book at position 4 of 11 in additional filter chain; firing Filter: 'LogoutFilter'
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', GET]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/deleteIndex' doesn't match 'GET /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', POST]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Checking match of request : '/elasticbook/deleteIndex'; against '/logout'
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', PUT]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/deleteIndex' doesn't match 'PUT /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', DELETE]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/deleteIndex' doesn't match 'DELETE /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - No matches found
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/deleteIndex?indexName=book at position 5 of 11 in additional filter chain; firing Filter: 'AuthenticationTokenFilter'
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - AuthenticationTokenFiler Called......
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - ****** Authentication:  null 
 ****** UserName: null
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/deleteIndex?indexName=book at position 6 of 11 in additional filter chain; firing Filter: 'RequestCacheAwareFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/deleteIndex?indexName=book at position 7 of 11 in additional filter chain; firing Filter: 'SecurityContextHolderAwareRequestFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/deleteIndex?indexName=book at position 8 of 11 in additional filter chain; firing Filter: 'AnonymousAuthenticationFilter'
org.springframework.security.web.authentication.AnonymousAuthenticationFilter -> DEBUG org.springframework.security.web.authentication.AnonymousAuthenticationFilter - Populated SecurityContextHolder with anonymous token: 'org.springframework.security.authentication.AnonymousAuthenticationToken@9055c2bc: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_ANONYMOUS'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/deleteIndex?indexName=book at position 9 of 11 in additional filter chain; firing Filter: 'SessionManagementFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/deleteIndex?indexName=book at position 10 of 11 in additional filter chain; firing Filter: 'ExceptionTranslationFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/deleteIndex?indexName=book at position 11 of 11 in additional filter chain; firing Filter: 'FilterSecurityInterceptor'
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/deleteIndex' doesn't match 'OPTIONS /**
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Checking match of request : '/elasticbook/deleteIndex'; against '/auth/**'
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Secure object: FilterInvocation: URL: /elasticbook/deleteIndex?indexName=book; Attributes: [authenticated]
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Previously Authenticated: org.springframework.security.authentication.AnonymousAuthenticationToken@9055c2bc: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_ANONYMOUS
org.springframework.security.access.vote.AffirmativeBased -> DEBUG org.springframework.security.access.vote.AffirmativeBased - Voter: org.springframework.security.web.access.expression.WebExpressionVoter@95b836, returned: -1
org.springframework.security.web.access.ExceptionTranslationFilter -> DEBUG org.springframework.security.web.access.ExceptionTranslationFilter - Access is denied (user is anonymous); redirecting to authentication entry point
org.springframework.security.access.AccessDeniedException: Access is denied
	at org.springframework.security.access.vote.AffirmativeBased.decide(AffirmativeBased.java:84)
	at org.springframework.security.access.intercept.AbstractSecurityInterceptor.beforeInvocation(AbstractSecurityInterceptor.java:233)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:124)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:169)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at javax.servlet.FilterChain$doFilter.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at javax.servlet.FilterChain$doFilter.call(Unknown Source)
	at com.subha.security.filter.AuthenticationTokenFilter.doFilter(AuthenticationTokenFilter.groovy:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:121)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:214)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:522)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:1110)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:785)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1425)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
org.springframework.security.web.access.ExceptionTranslationFilter -> DEBUG org.springframework.security.web.access.ExceptionTranslationFilter - Calling Authentication entry point.
org.apache.commons.logging.Log$info -> INFO com.subha.security.utils.EntryPointUnauthorizedHandler -  ********* In Auth EntryPoint with Exception org.springframework.security.authentication.InsufficientAuthenticationException: Full authentication is required to access this resource
org.springframework.security.web.header.writers.HstsHeaderWriter -> DEBUG org.springframework.security.web.header.writers.HstsHeaderWriter - Not injecting HSTS header since it did not match the requestMatcher org.springframework.security.web.header.writers.HstsHeaderWriter$SecureRequestMatcher@1771284
org.springframework.security.web.context.SecurityContextPersistenceFilter -> DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter - SecurityContextHolder now cleared, as request processing completed
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /auth at position 1 of 11 in additional filter chain; firing Filter: 'WebAsyncManagerIntegrationFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /auth at position 2 of 11 in additional filter chain; firing Filter: 'SecurityContextPersistenceFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /auth at position 3 of 11 in additional filter chain; firing Filter: 'HeaderWriterFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /auth at position 4 of 11 in additional filter chain; firing Filter: 'LogoutFilter'
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', GET]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /auth' doesn't match 'GET /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', POST]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Checking match of request : '/auth'; against '/logout'
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', PUT]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /auth' doesn't match 'PUT /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', DELETE]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /auth' doesn't match 'DELETE /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - No matches found
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /auth at position 5 of 11 in additional filter chain; firing Filter: 'AuthenticationTokenFilter'
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - AuthenticationTokenFiler Called......
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - ****** Authentication:  null 
 ****** UserName: null
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /auth at position 6 of 11 in additional filter chain; firing Filter: 'RequestCacheAwareFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /auth at position 7 of 11 in additional filter chain; firing Filter: 'SecurityContextHolderAwareRequestFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /auth at position 8 of 11 in additional filter chain; firing Filter: 'AnonymousAuthenticationFilter'
org.springframework.security.web.authentication.AnonymousAuthenticationFilter -> DEBUG org.springframework.security.web.authentication.AnonymousAuthenticationFilter - Populated SecurityContextHolder with anonymous token: 'org.springframework.security.authentication.AnonymousAuthenticationToken@9055c2bc: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_ANONYMOUS'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /auth at position 9 of 11 in additional filter chain; firing Filter: 'SessionManagementFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /auth at position 10 of 11 in additional filter chain; firing Filter: 'ExceptionTranslationFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /auth at position 11 of 11 in additional filter chain; firing Filter: 'FilterSecurityInterceptor'
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /auth' doesn't match 'OPTIONS /**
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Checking match of request : '/auth'; against '/auth/**'
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Secure object: FilterInvocation: URL: /auth; Attributes: [permitAll]
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Previously Authenticated: org.springframework.security.authentication.AnonymousAuthenticationToken@9055c2bc: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_ANONYMOUS
org.springframework.security.access.vote.AffirmativeBased -> DEBUG org.springframework.security.access.vote.AffirmativeBased - Voter: org.springframework.security.web.access.expression.WebExpressionVoter@95b836, returned: 1
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Authorization successful
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - RunAsManager did not change Authentication object
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /auth reached end of additional filter chain; proceeding with original chain
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - AuthenticationTokenFiler Called......
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - ****** Authentication:  org.springframework.security.authentication.AnonymousAuthenticationToken@9055c2bc: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_ANONYMOUS 
 ****** UserName: null
org.apache.commons.logging.Log$info -> INFO com.subha.security.controller.AuthenticationController - ************  Controller Method Call Starts
org.apache.commons.logging.Log$info -> INFO com.subha.security.controller.AuthenticationController - ************  In AuthenticateRequest  com.subha.security.model.AuthenticationRequest@3c15ea
org.apache.commons.logging.Log$info -> INFO com.subha.security.controller.AuthenticationController - ************  The Authentication Manager class org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator
org.springframework.security.authentication.ProviderManager -> DEBUG org.springframework.security.authentication.ProviderManager - Authentication attempt using com.subha.security.provider.CustomAuthenticationProvider
org.apache.commons.logging.Log$info -> INFO com.subha.security.controller.AuthenticationController - ************  The Authentication class is: class org.springframework.security.authentication.UsernamePasswordAuthenticationToken
org.apache.commons.logging.Log$info -> INFO com.subha.security.controller.AuthenticationController - ************  The User Details Service is:class com.subha.security.service.UserDetailsServiceImpl
org.apache.commons.logging.Log$info -> INFO com.subha.security.controller.AuthenticationController - ************  Controller Method Call Ends
org.springframework.security.web.header.writers.HstsHeaderWriter -> DEBUG org.springframework.security.web.header.writers.HstsHeaderWriter - Not injecting HSTS header since it did not match the requestMatcher org.springframework.security.web.header.writers.HstsHeaderWriter$SecureRequestMatcher@1771284
org.springframework.security.web.access.ExceptionTranslationFilter -> DEBUG org.springframework.security.web.access.ExceptionTranslationFilter - Chain processed normally
org.springframework.security.web.context.SecurityContextPersistenceFilter -> DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter - SecurityContextHolder now cleared, as request processing completed
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/deleteIndex?indexName=book at position 1 of 11 in additional filter chain; firing Filter: 'WebAsyncManagerIntegrationFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/deleteIndex?indexName=book at position 2 of 11 in additional filter chain; firing Filter: 'SecurityContextPersistenceFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/deleteIndex?indexName=book at position 3 of 11 in additional filter chain; firing Filter: 'HeaderWriterFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/deleteIndex?indexName=book at position 4 of 11 in additional filter chain; firing Filter: 'LogoutFilter'
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', GET]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/deleteIndex' doesn't match 'GET /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', POST]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Checking match of request : '/elasticbook/deleteIndex'; against '/logout'
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', PUT]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/deleteIndex' doesn't match 'PUT /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', DELETE]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/deleteIndex' doesn't match 'DELETE /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - No matches found
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/deleteIndex?indexName=book at position 5 of 11 in additional filter chain; firing Filter: 'AuthenticationTokenFilter'
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - AuthenticationTokenFiler Called......
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - ****** Authentication:  null 
 ****** UserName: MIC
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter -   ****** In Custom Filter Hurrah!!! Token Present
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter -   ****** In Custom Filter Hurrah!!! Valid Token Present
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/deleteIndex?indexName=book at position 6 of 11 in additional filter chain; firing Filter: 'RequestCacheAwareFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/deleteIndex?indexName=book at position 7 of 11 in additional filter chain; firing Filter: 'SecurityContextHolderAwareRequestFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/deleteIndex?indexName=book at position 8 of 11 in additional filter chain; firing Filter: 'AnonymousAuthenticationFilter'
org.springframework.security.web.authentication.AnonymousAuthenticationFilter -> DEBUG org.springframework.security.web.authentication.AnonymousAuthenticationFilter - SecurityContextHolder not populated with anonymous token, as it already contained: 'org.springframework.security.authentication.UsernamePasswordAuthenticationToken@6e19abf9: Principal: com.subha.security.model.User@18cd9e1; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_A'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/deleteIndex?indexName=book at position 9 of 11 in additional filter chain; firing Filter: 'SessionManagementFilter'
org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy -> DEBUG org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy - Delegating to org.springframework.security.web.authentication.session.ChangeSessionIdAuthenticationStrategy@17008fb
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/deleteIndex?indexName=book at position 10 of 11 in additional filter chain; firing Filter: 'ExceptionTranslationFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/deleteIndex?indexName=book at position 11 of 11 in additional filter chain; firing Filter: 'FilterSecurityInterceptor'
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/deleteIndex' doesn't match 'OPTIONS /**
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Checking match of request : '/elasticbook/deleteIndex'; against '/auth/**'
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Secure object: FilterInvocation: URL: /elasticbook/deleteIndex?indexName=book; Attributes: [authenticated]
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Previously Authenticated: org.springframework.security.authentication.UsernamePasswordAuthenticationToken@6e19abf9: Principal: com.subha.security.model.User@18cd9e1; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_A
org.springframework.security.access.vote.AffirmativeBased -> DEBUG org.springframework.security.access.vote.AffirmativeBased - Voter: org.springframework.security.web.access.expression.WebExpressionVoter@95b836, returned: 1
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Authorization successful
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - RunAsManager did not change Authentication object
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/deleteIndex?indexName=book reached end of additional filter chain; proceeding with original chain
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - AuthenticationTokenFiler Called......
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - ****** Authentication:  org.springframework.security.authentication.UsernamePasswordAuthenticationToken@6e19abf9: Principal: com.subha.security.model.User@18cd9e1; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_A 
 ****** UserName: MIC
org.apache.commons.logging.Log$info -> INFO com.subha.security.controller.BookController - ******  Deleting Book  Index: book in ELASTIC DB......
org.springframework.security.web.header.writers.HstsHeaderWriter -> DEBUG org.springframework.security.web.header.writers.HstsHeaderWriter - Not injecting HSTS header since it did not match the requestMatcher org.springframework.security.web.header.writers.HstsHeaderWriter$SecureRequestMatcher@1771284
org.springframework.security.web.access.ExceptionTranslationFilter -> DEBUG org.springframework.security.web.access.ExceptionTranslationFilter - Chain processed normally
org.springframework.security.web.context.SecurityContextPersistenceFilter -> DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter - SecurityContextHolder now cleared, as request processing completed
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addIndex?indexName=book at position 1 of 11 in additional filter chain; firing Filter: 'WebAsyncManagerIntegrationFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addIndex?indexName=book at position 2 of 11 in additional filter chain; firing Filter: 'SecurityContextPersistenceFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addIndex?indexName=book at position 3 of 11 in additional filter chain; firing Filter: 'HeaderWriterFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addIndex?indexName=book at position 4 of 11 in additional filter chain; firing Filter: 'LogoutFilter'
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', GET]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/addIndex' doesn't match 'GET /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', POST]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Checking match of request : '/elasticbook/addIndex'; against '/logout'
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', PUT]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/addIndex' doesn't match 'PUT /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', DELETE]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/addIndex' doesn't match 'DELETE /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - No matches found
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addIndex?indexName=book at position 5 of 11 in additional filter chain; firing Filter: 'AuthenticationTokenFilter'
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - AuthenticationTokenFiler Called......
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - ****** Authentication:  null 
 ****** UserName: MIC
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter -   ****** In Custom Filter Hurrah!!! Token Present
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter -   ****** In Custom Filter Hurrah!!! Valid Token Present
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addIndex?indexName=book at position 6 of 11 in additional filter chain; firing Filter: 'RequestCacheAwareFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addIndex?indexName=book at position 7 of 11 in additional filter chain; firing Filter: 'SecurityContextHolderAwareRequestFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addIndex?indexName=book at position 8 of 11 in additional filter chain; firing Filter: 'AnonymousAuthenticationFilter'
org.springframework.security.web.authentication.AnonymousAuthenticationFilter -> DEBUG org.springframework.security.web.authentication.AnonymousAuthenticationFilter - SecurityContextHolder not populated with anonymous token, as it already contained: 'org.springframework.security.authentication.UsernamePasswordAuthenticationToken@6e82caaa: Principal: com.subha.security.model.User@117b8b2; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_A'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addIndex?indexName=book at position 9 of 11 in additional filter chain; firing Filter: 'SessionManagementFilter'
org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy -> DEBUG org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy - Delegating to org.springframework.security.web.authentication.session.ChangeSessionIdAuthenticationStrategy@17008fb
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addIndex?indexName=book at position 10 of 11 in additional filter chain; firing Filter: 'ExceptionTranslationFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addIndex?indexName=book at position 11 of 11 in additional filter chain; firing Filter: 'FilterSecurityInterceptor'
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/addIndex' doesn't match 'OPTIONS /**
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Checking match of request : '/elasticbook/addIndex'; against '/auth/**'
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Secure object: FilterInvocation: URL: /elasticbook/addIndex?indexName=book; Attributes: [authenticated]
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Previously Authenticated: org.springframework.security.authentication.UsernamePasswordAuthenticationToken@6e82caaa: Principal: com.subha.security.model.User@117b8b2; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_A
org.springframework.security.access.vote.AffirmativeBased -> DEBUG org.springframework.security.access.vote.AffirmativeBased - Voter: org.springframework.security.web.access.expression.WebExpressionVoter@95b836, returned: 1
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Authorization successful
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - RunAsManager did not change Authentication object
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addIndex?indexName=book reached end of additional filter chain; proceeding with original chain
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - AuthenticationTokenFiler Called......
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - ****** Authentication:  org.springframework.security.authentication.UsernamePasswordAuthenticationToken@6e82caaa: Principal: com.subha.security.model.User@117b8b2; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_A 
 ****** UserName: MIC
org.apache.commons.logging.Log$info -> INFO com.subha.security.controller.BookController - ******  Adding Book  Index: book in ELASTIC DB......
org.springframework.security.web.header.writers.HstsHeaderWriter -> DEBUG org.springframework.security.web.header.writers.HstsHeaderWriter - Not injecting HSTS header since it did not match the requestMatcher org.springframework.security.web.header.writers.HstsHeaderWriter$SecureRequestMatcher@1771284
org.springframework.security.web.access.ExceptionTranslationFilter -> DEBUG org.springframework.security.web.access.ExceptionTranslationFilter - Chain processed normally
org.springframework.security.web.context.SecurityContextPersistenceFilter -> DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter - SecurityContextHolder now cleared, as request processing completed
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addMapping at position 1 of 11 in additional filter chain; firing Filter: 'WebAsyncManagerIntegrationFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addMapping at position 2 of 11 in additional filter chain; firing Filter: 'SecurityContextPersistenceFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addMapping at position 3 of 11 in additional filter chain; firing Filter: 'HeaderWriterFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addMapping at position 4 of 11 in additional filter chain; firing Filter: 'LogoutFilter'
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', GET]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/addMapping' doesn't match 'GET /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', POST]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Checking match of request : '/elasticbook/addMapping'; against '/logout'
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', PUT]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/addMapping' doesn't match 'PUT /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', DELETE]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/addMapping' doesn't match 'DELETE /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - No matches found
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addMapping at position 5 of 11 in additional filter chain; firing Filter: 'AuthenticationTokenFilter'
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - AuthenticationTokenFiler Called......
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - ****** Authentication:  null 
 ****** UserName: MIC
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter -   ****** In Custom Filter Hurrah!!! Token Present
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter -   ****** In Custom Filter Hurrah!!! Valid Token Present
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addMapping at position 6 of 11 in additional filter chain; firing Filter: 'RequestCacheAwareFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addMapping at position 7 of 11 in additional filter chain; firing Filter: 'SecurityContextHolderAwareRequestFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addMapping at position 8 of 11 in additional filter chain; firing Filter: 'AnonymousAuthenticationFilter'
org.springframework.security.web.authentication.AnonymousAuthenticationFilter -> DEBUG org.springframework.security.web.authentication.AnonymousAuthenticationFilter - SecurityContextHolder not populated with anonymous token, as it already contained: 'org.springframework.security.authentication.UsernamePasswordAuthenticationToken@6e352b20: Principal: com.subha.security.model.User@1a05938; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_A'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addMapping at position 9 of 11 in additional filter chain; firing Filter: 'SessionManagementFilter'
org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy -> DEBUG org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy - Delegating to org.springframework.security.web.authentication.session.ChangeSessionIdAuthenticationStrategy@17008fb
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addMapping at position 10 of 11 in additional filter chain; firing Filter: 'ExceptionTranslationFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addMapping at position 11 of 11 in additional filter chain; firing Filter: 'FilterSecurityInterceptor'
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/addMapping' doesn't match 'OPTIONS /**
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Checking match of request : '/elasticbook/addMapping'; against '/auth/**'
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Secure object: FilterInvocation: URL: /elasticbook/addMapping; Attributes: [authenticated]
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Previously Authenticated: org.springframework.security.authentication.UsernamePasswordAuthenticationToken@6e352b20: Principal: com.subha.security.model.User@1a05938; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_A
org.springframework.security.access.vote.AffirmativeBased -> DEBUG org.springframework.security.access.vote.AffirmativeBased - Voter: org.springframework.security.web.access.expression.WebExpressionVoter@95b836, returned: 1
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Authorization successful
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - RunAsManager did not change Authentication object
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addMapping reached end of additional filter chain; proceeding with original chain
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - AuthenticationTokenFiler Called......
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - ****** Authentication:  org.springframework.security.authentication.UsernamePasswordAuthenticationToken@6e352b20: Principal: com.subha.security.model.User@1a05938; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_A 
 ****** UserName: MIC
org.apache.commons.logging.Log$info -> INFO com.subha.security.controller.BookController - ******  Adding Book Mapping in ELASTIC DB......
org.apache.commons.logging.Log$error$0 -> ERROR com.subha.security.controller.BookController - Generic **********  Request: http://localhost:8080/SpringToken/elasticbook/addMapping raised org.springframework.data.elasticsearch.ElasticsearchException: Error while getting mapping for indexName : bookindex type : book no such index
org.springframework.security.web.header.writers.HstsHeaderWriter -> DEBUG org.springframework.security.web.header.writers.HstsHeaderWriter - Not injecting HSTS header since it did not match the requestMatcher org.springframework.security.web.header.writers.HstsHeaderWriter$SecureRequestMatcher@1771284
org.springframework.security.web.context.SecurityContextPersistenceFilter -> DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter - SecurityContextHolder now cleared, as request processing completed
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 1 of 11 in additional filter chain; firing Filter: 'WebAsyncManagerIntegrationFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 2 of 11 in additional filter chain; firing Filter: 'SecurityContextPersistenceFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 3 of 11 in additional filter chain; firing Filter: 'HeaderWriterFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 4 of 11 in additional filter chain; firing Filter: 'LogoutFilter'
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', GET]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/add' doesn't match 'GET /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', POST]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Checking match of request : '/elasticbook/add'; against '/logout'
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', PUT]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/add' doesn't match 'PUT /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', DELETE]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/add' doesn't match 'DELETE /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - No matches found
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 5 of 11 in additional filter chain; firing Filter: 'AuthenticationTokenFilter'
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - AuthenticationTokenFiler Called......
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - ****** Authentication:  null 
 ****** UserName: MIC
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter -   ****** In Custom Filter Hurrah!!! Token Present
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter -   ****** In Custom Filter Hurrah!!! Valid Token Present
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 6 of 11 in additional filter chain; firing Filter: 'RequestCacheAwareFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 7 of 11 in additional filter chain; firing Filter: 'SecurityContextHolderAwareRequestFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 8 of 11 in additional filter chain; firing Filter: 'AnonymousAuthenticationFilter'
org.springframework.security.web.authentication.AnonymousAuthenticationFilter -> DEBUG org.springframework.security.web.authentication.AnonymousAuthenticationFilter - SecurityContextHolder not populated with anonymous token, as it already contained: 'org.springframework.security.authentication.UsernamePasswordAuthenticationToken@6e171938: Principal: com.subha.security.model.User@1826b20; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_A'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 9 of 11 in additional filter chain; firing Filter: 'SessionManagementFilter'
org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy -> DEBUG org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy - Delegating to org.springframework.security.web.authentication.session.ChangeSessionIdAuthenticationStrategy@17008fb
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 10 of 11 in additional filter chain; firing Filter: 'ExceptionTranslationFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 11 of 11 in additional filter chain; firing Filter: 'FilterSecurityInterceptor'
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/add' doesn't match 'OPTIONS /**
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Checking match of request : '/elasticbook/add'; against '/auth/**'
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Secure object: FilterInvocation: URL: /elasticbook/add; Attributes: [authenticated]
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Previously Authenticated: org.springframework.security.authentication.UsernamePasswordAuthenticationToken@6e171938: Principal: com.subha.security.model.User@1826b20; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_A
org.springframework.security.access.vote.AffirmativeBased -> DEBUG org.springframework.security.access.vote.AffirmativeBased - Voter: org.springframework.security.web.access.expression.WebExpressionVoter@95b836, returned: 1
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Authorization successful
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - RunAsManager did not change Authentication object
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add reached end of additional filter chain; proceeding with original chain
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - AuthenticationTokenFiler Called......
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - ****** Authentication:  org.springframework.security.authentication.UsernamePasswordAuthenticationToken@6e171938: Principal: com.subha.security.model.User@1826b20; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_A 
 ****** UserName: MIC
org.apache.commons.logging.Log$info -> INFO com.subha.security.controller.BookController - ******  Adding Book com.subha.security.entities.elastic.Book(22, Groovy In Action 222, com.subha.security.entities.elastic.Author(Gordon)) in ELASTIC DB......
org.springframework.security.web.access.ExceptionTranslationFilter -> DEBUG org.springframework.security.web.access.ExceptionTranslationFilter - Chain processed normally
org.springframework.security.web.header.writers.HstsHeaderWriter -> DEBUG org.springframework.security.web.header.writers.HstsHeaderWriter - Not injecting HSTS header since it did not match the requestMatcher org.springframework.security.web.header.writers.HstsHeaderWriter$SecureRequestMatcher@1771284
org.springframework.security.web.context.SecurityContextPersistenceFilter -> DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter - SecurityContextHolder now cleared, as request processing completed
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 1 of 11 in additional filter chain; firing Filter: 'WebAsyncManagerIntegrationFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 2 of 11 in additional filter chain; firing Filter: 'SecurityContextPersistenceFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 3 of 11 in additional filter chain; firing Filter: 'HeaderWriterFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 4 of 11 in additional filter chain; firing Filter: 'LogoutFilter'
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', GET]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/add' doesn't match 'GET /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', POST]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Checking match of request : '/elasticbook/add'; against '/logout'
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', PUT]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/add' doesn't match 'PUT /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', DELETE]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/add' doesn't match 'DELETE /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - No matches found
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 5 of 11 in additional filter chain; firing Filter: 'AuthenticationTokenFilter'
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - AuthenticationTokenFiler Called......
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - ****** Authentication:  null 
 ****** UserName: MIC
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter -   ****** In Custom Filter Hurrah!!! Token Present
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter -   ****** In Custom Filter Hurrah!!! Valid Token Present
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 6 of 11 in additional filter chain; firing Filter: 'RequestCacheAwareFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 7 of 11 in additional filter chain; firing Filter: 'SecurityContextHolderAwareRequestFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 8 of 11 in additional filter chain; firing Filter: 'AnonymousAuthenticationFilter'
org.springframework.security.web.authentication.AnonymousAuthenticationFilter -> DEBUG org.springframework.security.web.authentication.AnonymousAuthenticationFilter - SecurityContextHolder not populated with anonymous token, as it already contained: 'org.springframework.security.authentication.UsernamePasswordAuthenticationToken@6e85aa5b: Principal: com.subha.security.model.User@110d843; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_A'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 9 of 11 in additional filter chain; firing Filter: 'SessionManagementFilter'
org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy -> DEBUG org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy - Delegating to org.springframework.security.web.authentication.session.ChangeSessionIdAuthenticationStrategy@17008fb
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 10 of 11 in additional filter chain; firing Filter: 'ExceptionTranslationFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 11 of 11 in additional filter chain; firing Filter: 'FilterSecurityInterceptor'
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/add' doesn't match 'OPTIONS /**
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Checking match of request : '/elasticbook/add'; against '/auth/**'
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Secure object: FilterInvocation: URL: /elasticbook/add; Attributes: [authenticated]
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Previously Authenticated: org.springframework.security.authentication.UsernamePasswordAuthenticationToken@6e85aa5b: Principal: com.subha.security.model.User@110d843; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_A
org.springframework.security.access.vote.AffirmativeBased -> DEBUG org.springframework.security.access.vote.AffirmativeBased - Voter: org.springframework.security.web.access.expression.WebExpressionVoter@95b836, returned: 1
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Authorization successful
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - RunAsManager did not change Authentication object
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add reached end of additional filter chain; proceeding with original chain
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - AuthenticationTokenFiler Called......
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - ****** Authentication:  org.springframework.security.authentication.UsernamePasswordAuthenticationToken@6e85aa5b: Principal: com.subha.security.model.User@110d843; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_A 
 ****** UserName: MIC
org.apache.commons.logging.Log$info -> INFO com.subha.security.controller.BookController - ******  Adding Book com.subha.security.entities.elastic.Book(22OK, Groovy In Action 222, com.subha.security.entities.elastic.Author(Gordon)) in ELASTIC DB......
org.apache.commons.logging.Log$error$0 -> ERROR com.subha.security.controller.BookController - Generic **********  Request: http://localhost:8080/SpringToken/elasticbook/add raised MapperParsingException[failed to parse [id]]; nested: NumberFormatException[For input string: "22OK"];
org.springframework.security.web.header.writers.HstsHeaderWriter -> DEBUG org.springframework.security.web.header.writers.HstsHeaderWriter - Not injecting HSTS header since it did not match the requestMatcher org.springframework.security.web.header.writers.HstsHeaderWriter$SecureRequestMatcher@1771284
org.springframework.security.web.context.SecurityContextPersistenceFilter -> DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter - SecurityContextHolder now cleared, as request processing completed
org.springframework.boot.StartupInfoLogger -> INFO com.subha.security.properties.SpringTokenApplication - Starting SpringTokenApplication on user-PC with PID 5472 (E:\My_Work\SpringToken\build\classes\main started by user in E:\My_Work\SpringToken)
org.springframework.boot.StartupInfoLogger -> DEBUG com.subha.security.properties.SpringTokenApplication - Running with Spring Boot v1.4.0.RELEASE, Spring v4.3.2.RELEASE
org.springframework.boot.SpringApplication -> INFO com.subha.security.properties.SpringTokenApplication - The following profiles are active: staging
org.springframework.web.filter.GenericFilterBean -> DEBUG com.subha.security.filter.AuthenticationTokenFilter - Initializing filter 'authenticationTokenFilterBean'
org.springframework.web.filter.GenericFilterBean -> DEBUG com.subha.security.filter.AuthenticationTokenFilter - Filter 'authenticationTokenFilterBean' configured successfully
org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration$EnableGlobalAuthenticationAutowiredConfigurer -> DEBUG org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration$EnableGlobalAuthenticationAutowiredConfigurer - Eagerly initializing {securityConfig=com.subha.security.config.SecurityConfig$$EnhancerBySpringCGLIB$$ec9ebec2@c161a7}
org.springframework.security.web.access.expression.ExpressionBasedFilterInvocationSecurityMetadataSource -> DEBUG org.springframework.security.web.access.expression.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression 'permitAll', for Ant [pattern='/**', OPTIONS]
org.springframework.security.web.access.expression.ExpressionBasedFilterInvocationSecurityMetadataSource -> DEBUG org.springframework.security.web.access.expression.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression 'permitAll', for Ant [pattern='/auth/**']
org.springframework.security.web.access.expression.ExpressionBasedFilterInvocationSecurityMetadataSource -> DEBUG org.springframework.security.web.access.expression.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression 'authenticated', for org.springframework.security.web.util.matcher.AnyRequestMatcher@1
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Validated configuration attributes
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Validated configuration attributes
org.springframework.security.web.DefaultSecurityFilterChain -> INFO org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1f762a9, org.springframework.security.web.context.SecurityContextPersistenceFilter@163824d, org.springframework.security.web.header.HeaderWriterFilter@8124d6, org.springframework.security.web.authentication.logout.LogoutFilter@58b3dd, com.subha.security.filter.AuthenticationTokenFilter@1cea0f5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@80d35f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1db8813, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6e59be, org.springframework.security.web.session.SessionManagementFilter@1e10e13, org.springframework.security.web.access.ExceptionTranslationFilter@1103355, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@f6fcd2]
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor - Validated configuration attributes
org.springframework.boot.StartupInfoLogger -> INFO com.subha.security.properties.SpringTokenApplication - Started SpringTokenApplication in 27.281 seconds (JVM running for 31.668)
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /auth at position 1 of 11 in additional filter chain; firing Filter: 'WebAsyncManagerIntegrationFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /auth at position 2 of 11 in additional filter chain; firing Filter: 'SecurityContextPersistenceFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /auth at position 3 of 11 in additional filter chain; firing Filter: 'HeaderWriterFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /auth at position 4 of 11 in additional filter chain; firing Filter: 'LogoutFilter'
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', GET]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /auth' doesn't match 'GET /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', POST]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Checking match of request : '/auth'; against '/logout'
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', PUT]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /auth' doesn't match 'PUT /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', DELETE]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /auth' doesn't match 'DELETE /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - No matches found
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /auth at position 5 of 11 in additional filter chain; firing Filter: 'AuthenticationTokenFilter'
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - AuthenticationTokenFiler Called......
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - ****** Authentication:  null 
 ****** UserName: null
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /auth at position 6 of 11 in additional filter chain; firing Filter: 'RequestCacheAwareFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /auth at position 7 of 11 in additional filter chain; firing Filter: 'SecurityContextHolderAwareRequestFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /auth at position 8 of 11 in additional filter chain; firing Filter: 'AnonymousAuthenticationFilter'
org.springframework.security.web.authentication.AnonymousAuthenticationFilter -> DEBUG org.springframework.security.web.authentication.AnonymousAuthenticationFilter - Populated SecurityContextHolder with anonymous token: 'org.springframework.security.authentication.AnonymousAuthenticationToken@9055c2bc: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_ANONYMOUS'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /auth at position 9 of 11 in additional filter chain; firing Filter: 'SessionManagementFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /auth at position 10 of 11 in additional filter chain; firing Filter: 'ExceptionTranslationFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /auth at position 11 of 11 in additional filter chain; firing Filter: 'FilterSecurityInterceptor'
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /auth' doesn't match 'OPTIONS /**
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Checking match of request : '/auth'; against '/auth/**'
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Secure object: FilterInvocation: URL: /auth; Attributes: [permitAll]
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Previously Authenticated: org.springframework.security.authentication.AnonymousAuthenticationToken@9055c2bc: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_ANONYMOUS
org.springframework.security.access.vote.AffirmativeBased -> DEBUG org.springframework.security.access.vote.AffirmativeBased - Voter: org.springframework.security.web.access.expression.WebExpressionVoter@14a1cc6, returned: 1
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Authorization successful
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - RunAsManager did not change Authentication object
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /auth reached end of additional filter chain; proceeding with original chain
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - AuthenticationTokenFiler Called......
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - ****** Authentication:  org.springframework.security.authentication.AnonymousAuthenticationToken@9055c2bc: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_ANONYMOUS 
 ****** UserName: null
org.apache.commons.logging.Log$info -> INFO com.subha.security.controller.AuthenticationController - ************  Controller Method Call Starts
org.apache.commons.logging.Log$info -> INFO com.subha.security.controller.AuthenticationController - ************  In AuthenticateRequest  com.subha.security.model.AuthenticationRequest@52ddb4
org.apache.commons.logging.Log$info -> INFO com.subha.security.controller.AuthenticationController - ************  The Authentication Manager class org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator
org.springframework.security.authentication.ProviderManager -> DEBUG org.springframework.security.authentication.ProviderManager - Authentication attempt using com.subha.security.provider.CustomAuthenticationProvider
org.apache.commons.logging.Log$info -> INFO com.subha.security.controller.AuthenticationController - ************  The Authentication class is: class org.springframework.security.authentication.UsernamePasswordAuthenticationToken
org.apache.commons.logging.Log$info -> INFO com.subha.security.controller.AuthenticationController - ************  The User Details Service is:class com.subha.security.service.UserDetailsServiceImpl
org.apache.commons.logging.Log$info -> INFO com.subha.security.controller.AuthenticationController - ************  Controller Method Call Ends
org.springframework.security.web.header.writers.HstsHeaderWriter -> DEBUG org.springframework.security.web.header.writers.HstsHeaderWriter - Not injecting HSTS header since it did not match the requestMatcher org.springframework.security.web.header.writers.HstsHeaderWriter$SecureRequestMatcher@1ca9165
org.springframework.security.web.access.ExceptionTranslationFilter -> DEBUG org.springframework.security.web.access.ExceptionTranslationFilter - Chain processed normally
org.springframework.security.web.context.SecurityContextPersistenceFilter -> DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter - SecurityContextHolder now cleared, as request processing completed
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/deleteIndex?indexName=book at position 1 of 11 in additional filter chain; firing Filter: 'WebAsyncManagerIntegrationFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/deleteIndex?indexName=book at position 2 of 11 in additional filter chain; firing Filter: 'SecurityContextPersistenceFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/deleteIndex?indexName=book at position 3 of 11 in additional filter chain; firing Filter: 'HeaderWriterFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/deleteIndex?indexName=book at position 4 of 11 in additional filter chain; firing Filter: 'LogoutFilter'
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', GET]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/deleteIndex' doesn't match 'GET /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', POST]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Checking match of request : '/elasticbook/deleteIndex'; against '/logout'
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', PUT]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/deleteIndex' doesn't match 'PUT /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', DELETE]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/deleteIndex' doesn't match 'DELETE /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - No matches found
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/deleteIndex?indexName=book at position 5 of 11 in additional filter chain; firing Filter: 'AuthenticationTokenFilter'
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - AuthenticationTokenFiler Called......
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - ****** Authentication:  null 
 ****** UserName: MIC
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter -   ****** In Custom Filter Hurrah!!! Token Present
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter -   ****** In Custom Filter Hurrah!!! Valid Token Present
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/deleteIndex?indexName=book at position 6 of 11 in additional filter chain; firing Filter: 'RequestCacheAwareFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/deleteIndex?indexName=book at position 7 of 11 in additional filter chain; firing Filter: 'SecurityContextHolderAwareRequestFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/deleteIndex?indexName=book at position 8 of 11 in additional filter chain; firing Filter: 'AnonymousAuthenticationFilter'
org.springframework.security.web.authentication.AnonymousAuthenticationFilter -> DEBUG org.springframework.security.web.authentication.AnonymousAuthenticationFilter - SecurityContextHolder not populated with anonymous token, as it already contained: 'org.springframework.security.authentication.UsernamePasswordAuthenticationToken@6f6d98ff: Principal: com.subha.security.model.User@f8eae7; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_A'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/deleteIndex?indexName=book at position 9 of 11 in additional filter chain; firing Filter: 'SessionManagementFilter'
org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy -> DEBUG org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy - Delegating to org.springframework.security.web.authentication.session.ChangeSessionIdAuthenticationStrategy@49366d
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/deleteIndex?indexName=book at position 10 of 11 in additional filter chain; firing Filter: 'ExceptionTranslationFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/deleteIndex?indexName=book at position 11 of 11 in additional filter chain; firing Filter: 'FilterSecurityInterceptor'
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/deleteIndex' doesn't match 'OPTIONS /**
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Checking match of request : '/elasticbook/deleteIndex'; against '/auth/**'
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Secure object: FilterInvocation: URL: /elasticbook/deleteIndex?indexName=book; Attributes: [authenticated]
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Previously Authenticated: org.springframework.security.authentication.UsernamePasswordAuthenticationToken@6f6d98ff: Principal: com.subha.security.model.User@f8eae7; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_A
org.springframework.security.access.vote.AffirmativeBased -> DEBUG org.springframework.security.access.vote.AffirmativeBased - Voter: org.springframework.security.web.access.expression.WebExpressionVoter@14a1cc6, returned: 1
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Authorization successful
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - RunAsManager did not change Authentication object
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/deleteIndex?indexName=book reached end of additional filter chain; proceeding with original chain
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - AuthenticationTokenFiler Called......
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - ****** Authentication:  org.springframework.security.authentication.UsernamePasswordAuthenticationToken@6f6d98ff: Principal: com.subha.security.model.User@f8eae7; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_A 
 ****** UserName: MIC
org.apache.commons.logging.Log$info -> INFO com.subha.security.controller.BookController - ******  Deleting Book  Index: book in ELASTIC DB......
org.apache.commons.logging.Log$info -> INFO com.subha.security.controller.BookController - ****** Result is: true 
org.springframework.security.web.header.writers.HstsHeaderWriter -> DEBUG org.springframework.security.web.header.writers.HstsHeaderWriter - Not injecting HSTS header since it did not match the requestMatcher org.springframework.security.web.header.writers.HstsHeaderWriter$SecureRequestMatcher@1ca9165
org.springframework.security.web.access.ExceptionTranslationFilter -> DEBUG org.springframework.security.web.access.ExceptionTranslationFilter - Chain processed normally
org.springframework.security.web.context.SecurityContextPersistenceFilter -> DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter - SecurityContextHolder now cleared, as request processing completed
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addIndex?indexName=book at position 1 of 11 in additional filter chain; firing Filter: 'WebAsyncManagerIntegrationFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addIndex?indexName=book at position 2 of 11 in additional filter chain; firing Filter: 'SecurityContextPersistenceFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addIndex?indexName=book at position 3 of 11 in additional filter chain; firing Filter: 'HeaderWriterFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addIndex?indexName=book at position 4 of 11 in additional filter chain; firing Filter: 'LogoutFilter'
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', GET]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/addIndex' doesn't match 'GET /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', POST]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Checking match of request : '/elasticbook/addIndex'; against '/logout'
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', PUT]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/addIndex' doesn't match 'PUT /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', DELETE]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/addIndex' doesn't match 'DELETE /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - No matches found
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addIndex?indexName=book at position 5 of 11 in additional filter chain; firing Filter: 'AuthenticationTokenFilter'
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - AuthenticationTokenFiler Called......
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - ****** Authentication:  null 
 ****** UserName: MIC
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter -   ****** In Custom Filter Hurrah!!! Token Present
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter -   ****** In Custom Filter Hurrah!!! Valid Token Present
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addIndex?indexName=book at position 6 of 11 in additional filter chain; firing Filter: 'RequestCacheAwareFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addIndex?indexName=book at position 7 of 11 in additional filter chain; firing Filter: 'SecurityContextHolderAwareRequestFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addIndex?indexName=book at position 8 of 11 in additional filter chain; firing Filter: 'AnonymousAuthenticationFilter'
org.springframework.security.web.authentication.AnonymousAuthenticationFilter -> DEBUG org.springframework.security.web.authentication.AnonymousAuthenticationFilter - SecurityContextHolder not populated with anonymous token, as it already contained: 'org.springframework.security.authentication.UsernamePasswordAuthenticationToken@6e01c0f3: Principal: com.subha.security.model.User@194b2eb; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_A'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addIndex?indexName=book at position 9 of 11 in additional filter chain; firing Filter: 'SessionManagementFilter'
org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy -> DEBUG org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy - Delegating to org.springframework.security.web.authentication.session.ChangeSessionIdAuthenticationStrategy@49366d
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addIndex?indexName=book at position 10 of 11 in additional filter chain; firing Filter: 'ExceptionTranslationFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addIndex?indexName=book at position 11 of 11 in additional filter chain; firing Filter: 'FilterSecurityInterceptor'
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/addIndex' doesn't match 'OPTIONS /**
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Checking match of request : '/elasticbook/addIndex'; against '/auth/**'
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Secure object: FilterInvocation: URL: /elasticbook/addIndex?indexName=book; Attributes: [authenticated]
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Previously Authenticated: org.springframework.security.authentication.UsernamePasswordAuthenticationToken@6e01c0f3: Principal: com.subha.security.model.User@194b2eb; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_A
org.springframework.security.access.vote.AffirmativeBased -> DEBUG org.springframework.security.access.vote.AffirmativeBased - Voter: org.springframework.security.web.access.expression.WebExpressionVoter@14a1cc6, returned: 1
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Authorization successful
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - RunAsManager did not change Authentication object
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addIndex?indexName=book reached end of additional filter chain; proceeding with original chain
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - AuthenticationTokenFiler Called......
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - ****** Authentication:  org.springframework.security.authentication.UsernamePasswordAuthenticationToken@6e01c0f3: Principal: com.subha.security.model.User@194b2eb; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_A 
 ****** UserName: MIC
org.apache.commons.logging.Log$info -> INFO com.subha.security.controller.BookController - ******  Adding Book  Index: book in ELASTIC DB......
org.apache.commons.logging.Log$info -> INFO com.subha.security.controller.BookController - ****** Result is: true 
org.springframework.security.web.header.writers.HstsHeaderWriter -> DEBUG org.springframework.security.web.header.writers.HstsHeaderWriter - Not injecting HSTS header since it did not match the requestMatcher org.springframework.security.web.header.writers.HstsHeaderWriter$SecureRequestMatcher@1ca9165
org.springframework.security.web.access.ExceptionTranslationFilter -> DEBUG org.springframework.security.web.access.ExceptionTranslationFilter - Chain processed normally
org.springframework.security.web.context.SecurityContextPersistenceFilter -> DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter - SecurityContextHolder now cleared, as request processing completed
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addMapping at position 1 of 11 in additional filter chain; firing Filter: 'WebAsyncManagerIntegrationFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addMapping at position 2 of 11 in additional filter chain; firing Filter: 'SecurityContextPersistenceFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addMapping at position 3 of 11 in additional filter chain; firing Filter: 'HeaderWriterFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addMapping at position 4 of 11 in additional filter chain; firing Filter: 'LogoutFilter'
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', GET]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/addMapping' doesn't match 'GET /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', POST]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Checking match of request : '/elasticbook/addMapping'; against '/logout'
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', PUT]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/addMapping' doesn't match 'PUT /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', DELETE]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/addMapping' doesn't match 'DELETE /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - No matches found
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addMapping at position 5 of 11 in additional filter chain; firing Filter: 'AuthenticationTokenFilter'
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - AuthenticationTokenFiler Called......
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - ****** Authentication:  null 
 ****** UserName: MIC
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter -   ****** In Custom Filter Hurrah!!! Token Present
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter -   ****** In Custom Filter Hurrah!!! Valid Token Present
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addMapping at position 6 of 11 in additional filter chain; firing Filter: 'RequestCacheAwareFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addMapping at position 7 of 11 in additional filter chain; firing Filter: 'SecurityContextHolderAwareRequestFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addMapping at position 8 of 11 in additional filter chain; firing Filter: 'AnonymousAuthenticationFilter'
org.springframework.security.web.authentication.AnonymousAuthenticationFilter -> DEBUG org.springframework.security.web.authentication.AnonymousAuthenticationFilter - SecurityContextHolder not populated with anonymous token, as it already contained: 'org.springframework.security.authentication.UsernamePasswordAuthenticationToken@6f5006f8: Principal: com.subha.security.model.User@c574e0; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_A'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addMapping at position 9 of 11 in additional filter chain; firing Filter: 'SessionManagementFilter'
org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy -> DEBUG org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy - Delegating to org.springframework.security.web.authentication.session.ChangeSessionIdAuthenticationStrategy@49366d
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addMapping at position 10 of 11 in additional filter chain; firing Filter: 'ExceptionTranslationFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addMapping at position 11 of 11 in additional filter chain; firing Filter: 'FilterSecurityInterceptor'
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/addMapping' doesn't match 'OPTIONS /**
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Checking match of request : '/elasticbook/addMapping'; against '/auth/**'
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Secure object: FilterInvocation: URL: /elasticbook/addMapping; Attributes: [authenticated]
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Previously Authenticated: org.springframework.security.authentication.UsernamePasswordAuthenticationToken@6f5006f8: Principal: com.subha.security.model.User@c574e0; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_A
org.springframework.security.access.vote.AffirmativeBased -> DEBUG org.springframework.security.access.vote.AffirmativeBased - Voter: org.springframework.security.web.access.expression.WebExpressionVoter@14a1cc6, returned: 1
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Authorization successful
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - RunAsManager did not change Authentication object
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/addMapping reached end of additional filter chain; proceeding with original chain
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - AuthenticationTokenFiler Called......
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - ****** Authentication:  org.springframework.security.authentication.UsernamePasswordAuthenticationToken@6f5006f8: Principal: com.subha.security.model.User@c574e0; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_A 
 ****** UserName: MIC
org.apache.commons.logging.Log$info -> INFO com.subha.security.controller.BookController - ******  Adding Book Mapping in ELASTIC DB......
org.apache.commons.logging.Log$info -> INFO com.subha.security.controller.BookController - ****** Result is: true 
org.springframework.security.web.header.writers.HstsHeaderWriter -> DEBUG org.springframework.security.web.header.writers.HstsHeaderWriter - Not injecting HSTS header since it did not match the requestMatcher org.springframework.security.web.header.writers.HstsHeaderWriter$SecureRequestMatcher@1ca9165
org.springframework.security.web.access.ExceptionTranslationFilter -> DEBUG org.springframework.security.web.access.ExceptionTranslationFilter - Chain processed normally
org.springframework.security.web.context.SecurityContextPersistenceFilter -> DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter - SecurityContextHolder now cleared, as request processing completed
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 1 of 11 in additional filter chain; firing Filter: 'WebAsyncManagerIntegrationFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 2 of 11 in additional filter chain; firing Filter: 'SecurityContextPersistenceFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 3 of 11 in additional filter chain; firing Filter: 'HeaderWriterFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 4 of 11 in additional filter chain; firing Filter: 'LogoutFilter'
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', GET]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/add' doesn't match 'GET /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', POST]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Checking match of request : '/elasticbook/add'; against '/logout'
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', PUT]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/add' doesn't match 'PUT /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', DELETE]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/add' doesn't match 'DELETE /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - No matches found
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 5 of 11 in additional filter chain; firing Filter: 'AuthenticationTokenFilter'
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - AuthenticationTokenFiler Called......
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - ****** Authentication:  null 
 ****** UserName: MIC
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter -   ****** In Custom Filter Hurrah!!! Token Present
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter -   ****** In Custom Filter Hurrah!!! Valid Token Present
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 6 of 11 in additional filter chain; firing Filter: 'RequestCacheAwareFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 7 of 11 in additional filter chain; firing Filter: 'SecurityContextHolderAwareRequestFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 8 of 11 in additional filter chain; firing Filter: 'AnonymousAuthenticationFilter'
org.springframework.security.web.authentication.AnonymousAuthenticationFilter -> DEBUG org.springframework.security.web.authentication.AnonymousAuthenticationFilter - SecurityContextHolder not populated with anonymous token, as it already contained: 'org.springframework.security.authentication.UsernamePasswordAuthenticationToken@6f5540ce: Principal: com.subha.security.model.User@c032d6; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_A'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 9 of 11 in additional filter chain; firing Filter: 'SessionManagementFilter'
org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy -> DEBUG org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy - Delegating to org.springframework.security.web.authentication.session.ChangeSessionIdAuthenticationStrategy@49366d
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 10 of 11 in additional filter chain; firing Filter: 'ExceptionTranslationFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 11 of 11 in additional filter chain; firing Filter: 'FilterSecurityInterceptor'
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/add' doesn't match 'OPTIONS /**
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Checking match of request : '/elasticbook/add'; against '/auth/**'
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Secure object: FilterInvocation: URL: /elasticbook/add; Attributes: [authenticated]
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Previously Authenticated: org.springframework.security.authentication.UsernamePasswordAuthenticationToken@6f5540ce: Principal: com.subha.security.model.User@c032d6; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_A
org.springframework.security.access.vote.AffirmativeBased -> DEBUG org.springframework.security.access.vote.AffirmativeBased - Voter: org.springframework.security.web.access.expression.WebExpressionVoter@14a1cc6, returned: 1
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Authorization successful
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - RunAsManager did not change Authentication object
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add reached end of additional filter chain; proceeding with original chain
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - AuthenticationTokenFiler Called......
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - ****** Authentication:  org.springframework.security.authentication.UsernamePasswordAuthenticationToken@6f5540ce: Principal: com.subha.security.model.User@c032d6; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_A 
 ****** UserName: MIC
org.apache.commons.logging.Log$info -> INFO com.subha.security.controller.BookController - ******  Adding Book com.subha.security.entities.elastic.Book(22, Groovy In Action 222, com.subha.security.entities.elastic.Author(Gordon)) in ELASTIC DB......
org.apache.commons.logging.Log$info -> INFO com.subha.security.controller.BookController - ****** Result is: AVd8bQKQ6ltdx4zmT6lj 
org.springframework.security.web.header.writers.HstsHeaderWriter -> DEBUG org.springframework.security.web.header.writers.HstsHeaderWriter - Not injecting HSTS header since it did not match the requestMatcher org.springframework.security.web.header.writers.HstsHeaderWriter$SecureRequestMatcher@1ca9165
org.springframework.security.web.access.ExceptionTranslationFilter -> DEBUG org.springframework.security.web.access.ExceptionTranslationFilter - Chain processed normally
org.springframework.security.web.context.SecurityContextPersistenceFilter -> DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter - SecurityContextHolder now cleared, as request processing completed
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 1 of 11 in additional filter chain; firing Filter: 'WebAsyncManagerIntegrationFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 2 of 11 in additional filter chain; firing Filter: 'SecurityContextPersistenceFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 3 of 11 in additional filter chain; firing Filter: 'HeaderWriterFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 4 of 11 in additional filter chain; firing Filter: 'LogoutFilter'
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', GET]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/add' doesn't match 'GET /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', POST]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Checking match of request : '/elasticbook/add'; against '/logout'
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', PUT]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/add' doesn't match 'PUT /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', DELETE]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/add' doesn't match 'DELETE /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - No matches found
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 5 of 11 in additional filter chain; firing Filter: 'AuthenticationTokenFilter'
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - AuthenticationTokenFiler Called......
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - ****** Authentication:  null 
 ****** UserName: MIC
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter -   ****** In Custom Filter Hurrah!!! Token Present
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter -   ****** In Custom Filter Hurrah!!! Valid Token Present
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 6 of 11 in additional filter chain; firing Filter: 'RequestCacheAwareFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 7 of 11 in additional filter chain; firing Filter: 'SecurityContextHolderAwareRequestFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 8 of 11 in additional filter chain; firing Filter: 'AnonymousAuthenticationFilter'
org.springframework.security.web.authentication.AnonymousAuthenticationFilter -> DEBUG org.springframework.security.web.authentication.AnonymousAuthenticationFilter - SecurityContextHolder not populated with anonymous token, as it already contained: 'org.springframework.security.authentication.UsernamePasswordAuthenticationToken@6ef4b6e9: Principal: com.subha.security.model.User@161c4f1; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_A'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 9 of 11 in additional filter chain; firing Filter: 'SessionManagementFilter'
org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy -> DEBUG org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy - Delegating to org.springframework.security.web.authentication.session.ChangeSessionIdAuthenticationStrategy@49366d
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 10 of 11 in additional filter chain; firing Filter: 'ExceptionTranslationFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 11 of 11 in additional filter chain; firing Filter: 'FilterSecurityInterceptor'
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/add' doesn't match 'OPTIONS /**
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Checking match of request : '/elasticbook/add'; against '/auth/**'
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Secure object: FilterInvocation: URL: /elasticbook/add; Attributes: [authenticated]
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Previously Authenticated: org.springframework.security.authentication.UsernamePasswordAuthenticationToken@6ef4b6e9: Principal: com.subha.security.model.User@161c4f1; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_A
org.springframework.security.access.vote.AffirmativeBased -> DEBUG org.springframework.security.access.vote.AffirmativeBased - Voter: org.springframework.security.web.access.expression.WebExpressionVoter@14a1cc6, returned: 1
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Authorization successful
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - RunAsManager did not change Authentication object
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add reached end of additional filter chain; proceeding with original chain
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - AuthenticationTokenFiler Called......
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - ****** Authentication:  org.springframework.security.authentication.UsernamePasswordAuthenticationToken@6ef4b6e9: Principal: com.subha.security.model.User@161c4f1; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_A 
 ****** UserName: MIC
org.apache.commons.logging.Log$info -> INFO com.subha.security.controller.BookController - ******  Adding Book com.subha.security.entities.elastic.Book(23, Groovy In Action 222, com.subha.security.entities.elastic.Author(Gordon)) in ELASTIC DB......
org.apache.commons.logging.Log$info -> INFO com.subha.security.controller.BookController - ****** Result is: AVd8bWyt6ltdx4zmT6lk 
org.springframework.security.web.header.writers.HstsHeaderWriter -> DEBUG org.springframework.security.web.header.writers.HstsHeaderWriter - Not injecting HSTS header since it did not match the requestMatcher org.springframework.security.web.header.writers.HstsHeaderWriter$SecureRequestMatcher@1ca9165
org.springframework.security.web.access.ExceptionTranslationFilter -> DEBUG org.springframework.security.web.access.ExceptionTranslationFilter - Chain processed normally
org.springframework.security.web.context.SecurityContextPersistenceFilter -> DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter - SecurityContextHolder now cleared, as request processing completed
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 1 of 11 in additional filter chain; firing Filter: 'WebAsyncManagerIntegrationFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 2 of 11 in additional filter chain; firing Filter: 'SecurityContextPersistenceFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 3 of 11 in additional filter chain; firing Filter: 'HeaderWriterFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 4 of 11 in additional filter chain; firing Filter: 'LogoutFilter'
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', GET]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/add' doesn't match 'GET /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', POST]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Checking match of request : '/elasticbook/add'; against '/logout'
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', PUT]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/add' doesn't match 'PUT /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', DELETE]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/add' doesn't match 'DELETE /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - No matches found
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 5 of 11 in additional filter chain; firing Filter: 'AuthenticationTokenFilter'
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - AuthenticationTokenFiler Called......
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - ****** Authentication:  null 
 ****** UserName: MIC
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter -   ****** In Custom Filter Hurrah!!! Token Present
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter -   ****** In Custom Filter Hurrah!!! Valid Token Present
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 6 of 11 in additional filter chain; firing Filter: 'RequestCacheAwareFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 7 of 11 in additional filter chain; firing Filter: 'SecurityContextHolderAwareRequestFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 8 of 11 in additional filter chain; firing Filter: 'AnonymousAuthenticationFilter'
org.springframework.security.web.authentication.AnonymousAuthenticationFilter -> DEBUG org.springframework.security.web.authentication.AnonymousAuthenticationFilter - SecurityContextHolder not populated with anonymous token, as it already contained: 'org.springframework.security.authentication.UsernamePasswordAuthenticationToken@6e1b5cb4: Principal: com.subha.security.model.User@18e2eac; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_A'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 9 of 11 in additional filter chain; firing Filter: 'SessionManagementFilter'
org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy -> DEBUG org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy - Delegating to org.springframework.security.web.authentication.session.ChangeSessionIdAuthenticationStrategy@49366d
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 10 of 11 in additional filter chain; firing Filter: 'ExceptionTranslationFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 11 of 11 in additional filter chain; firing Filter: 'FilterSecurityInterceptor'
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/add' doesn't match 'OPTIONS /**
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Checking match of request : '/elasticbook/add'; against '/auth/**'
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Secure object: FilterInvocation: URL: /elasticbook/add; Attributes: [authenticated]
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Previously Authenticated: org.springframework.security.authentication.UsernamePasswordAuthenticationToken@6e1b5cb4: Principal: com.subha.security.model.User@18e2eac; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_A
org.springframework.security.access.vote.AffirmativeBased -> DEBUG org.springframework.security.access.vote.AffirmativeBased - Voter: org.springframework.security.web.access.expression.WebExpressionVoter@14a1cc6, returned: 1
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Authorization successful
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - RunAsManager did not change Authentication object
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add reached end of additional filter chain; proceeding with original chain
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - AuthenticationTokenFiler Called......
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - ****** Authentication:  org.springframework.security.authentication.UsernamePasswordAuthenticationToken@6e1b5cb4: Principal: com.subha.security.model.User@18e2eac; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_A 
 ****** UserName: MIC
org.apache.commons.logging.Log$info -> INFO com.subha.security.controller.BookController - ******  Adding Book com.subha.security.entities.elastic.Book(24, Groovy In Action 222, com.subha.security.entities.elastic.Author(Gordon)) in ELASTIC DB......
org.apache.commons.logging.Log$info -> INFO com.subha.security.controller.BookController - ****** Result is: AVd8bX-b6ltdx4zmT6ll 
org.springframework.security.web.header.writers.HstsHeaderWriter -> DEBUG org.springframework.security.web.header.writers.HstsHeaderWriter - Not injecting HSTS header since it did not match the requestMatcher org.springframework.security.web.header.writers.HstsHeaderWriter$SecureRequestMatcher@1ca9165
org.springframework.security.web.access.ExceptionTranslationFilter -> DEBUG org.springframework.security.web.access.ExceptionTranslationFilter - Chain processed normally
org.springframework.security.web.context.SecurityContextPersistenceFilter -> DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter - SecurityContextHolder now cleared, as request processing completed
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 1 of 11 in additional filter chain; firing Filter: 'WebAsyncManagerIntegrationFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 2 of 11 in additional filter chain; firing Filter: 'SecurityContextPersistenceFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 3 of 11 in additional filter chain; firing Filter: 'HeaderWriterFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 4 of 11 in additional filter chain; firing Filter: 'LogoutFilter'
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', GET]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/add' doesn't match 'GET /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', POST]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Checking match of request : '/elasticbook/add'; against '/logout'
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', PUT]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/add' doesn't match 'PUT /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - Trying to match using Ant [pattern='/logout', DELETE]
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/add' doesn't match 'DELETE /logout
org.springframework.security.web.util.matcher.OrRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.OrRequestMatcher - No matches found
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 5 of 11 in additional filter chain; firing Filter: 'AuthenticationTokenFilter'
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - AuthenticationTokenFiler Called......
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - ****** Authentication:  null 
 ****** UserName: MIC
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter -   ****** In Custom Filter Hurrah!!! Token Present
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter -   ****** In Custom Filter Hurrah!!! Valid Token Present
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 6 of 11 in additional filter chain; firing Filter: 'RequestCacheAwareFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 7 of 11 in additional filter chain; firing Filter: 'SecurityContextHolderAwareRequestFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 8 of 11 in additional filter chain; firing Filter: 'AnonymousAuthenticationFilter'
org.springframework.security.web.authentication.AnonymousAuthenticationFilter -> DEBUG org.springframework.security.web.authentication.AnonymousAuthenticationFilter - SecurityContextHolder not populated with anonymous token, as it already contained: 'org.springframework.security.authentication.UsernamePasswordAuthenticationToken@6f841921: Principal: com.subha.security.model.User@116b39; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_A'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 9 of 11 in additional filter chain; firing Filter: 'SessionManagementFilter'
org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy -> DEBUG org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy - Delegating to org.springframework.security.web.authentication.session.ChangeSessionIdAuthenticationStrategy@49366d
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 10 of 11 in additional filter chain; firing Filter: 'ExceptionTranslationFilter'
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add at position 11 of 11 in additional filter chain; firing Filter: 'FilterSecurityInterceptor'
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Request 'POST /elasticbook/add' doesn't match 'OPTIONS /**
org.springframework.security.web.util.matcher.AntPathRequestMatcher -> DEBUG org.springframework.security.web.util.matcher.AntPathRequestMatcher - Checking match of request : '/elasticbook/add'; against '/auth/**'
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Secure object: FilterInvocation: URL: /elasticbook/add; Attributes: [authenticated]
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Previously Authenticated: org.springframework.security.authentication.UsernamePasswordAuthenticationToken@6f841921: Principal: com.subha.security.model.User@116b39; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_A
org.springframework.security.access.vote.AffirmativeBased -> DEBUG org.springframework.security.access.vote.AffirmativeBased - Voter: org.springframework.security.web.access.expression.WebExpressionVoter@14a1cc6, returned: 1
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - Authorization successful
org.springframework.security.access.intercept.AbstractSecurityInterceptor -> DEBUG org.springframework.security.web.access.intercept.FilterSecurityInterceptor - RunAsManager did not change Authentication object
org.springframework.security.web.FilterChainProxy$VirtualFilterChain -> DEBUG org.springframework.security.web.FilterChainProxy - /elasticbook/add reached end of additional filter chain; proceeding with original chain
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - AuthenticationTokenFiler Called......
org.apache.commons.logging.Log$info -> INFO com.subha.security.filter.AuthenticationTokenFilter - ****** Authentication:  org.springframework.security.authentication.UsernamePasswordAuthenticationToken@6f841921: Principal: com.subha.security.model.User@116b39; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_A 
 ****** UserName: MIC
org.apache.commons.logging.Log$info -> INFO com.subha.security.controller.BookController - ******  Adding Book com.subha.security.entities.elastic.Book(24o, Groovy In Action 222, com.subha.security.entities.elastic.Author(Gordon)) in ELASTIC DB......
org.apache.commons.logging.Log$error$0 -> ERROR com.subha.security.controller.BookController - Generic **********  Request: http://localhost:8080/SpringToken/elasticbook/add raised MapperParsingException[failed to parse [id]]; nested: NumberFormatException[For input string: "24o"];
org.springframework.security.web.header.writers.HstsHeaderWriter -> DEBUG org.springframework.security.web.header.writers.HstsHeaderWriter - Not injecting HSTS header since it did not match the requestMatcher org.springframework.security.web.header.writers.HstsHeaderWriter$SecureRequestMatcher@1ca9165
org.springframework.security.web.context.SecurityContextPersistenceFilter -> DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter - SecurityContextHolder now cleared, as request processing completed
